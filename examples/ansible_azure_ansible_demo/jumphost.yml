---
- name: configure selinux
  selinux:
    policy: targeted
    state: permissive
  register: jumphost_selinux
  become: yes

- debug: var=jumphost_selinux

- name: change hostname
  hostname:
    name: "{{ jumphost_hostname }}"
  become: yes

- name: add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: "127.0.0.1 {{ jumphost_hostname }} {{ jumphost_fqdn }} localhost localhost.localdomain localhost4 localhost4.localdomain4"
    state: present
  become: yes

- name: configure epel repo
  include_role:
    name: ansible-role-repo-epel
  become: yes

- name: install git
  include_role: 
    name: ansible-role-git
  become: yes

- name: install ansible
  include_role: 
    name: ansible-role-ansible
  become: yes

- name: install pip
  include_role:
    name: ansible-role-pip
  become: yes

- name: install apache
  include_role: 
    name: ansible-role-apache
  become: yes

- name: install docker
  include_role: 
    name: ansible-role-docker
  become: yes
  vars:
    docker_service_start_and_enable: False

- name: Install pip packages
  pip:
    name: "{{ item.package }}"
    version: "{{ item.version | default(omit) }}"
  with_items: "{{ jumphost_pip_packages }}"
  become: yes

- name: Encrypt password
  set_fact:
    jumphost_user_encpwd: "{{ jumphost_user.password  | password_hash('sha512') }}"

- name: Create service user account
  user:
    name: "{{ jumphost_user.name }}"
    state: "{{ jumphost_user.state | default('present') }}"
    comment: "{{ jumphost_user.comment | default('created by Ansible') }}"
    createhome: "{{ jumphost_user.createhome | default(omit) }}"
    shell: "{{ jumphost_user.shell | default(omit) }}"
    password: "{{ jumphost_user_encpwd | default(omit) }}"
    update_password: on_create
  become: yes
  ignore_errors: True
  register: jumphost_user_create

# https://github.com/lqueryvg/ansible-role-chage
- name: Set service account expiry details
  chage:
    user: "{{ jumphost_user.name }}"
    sp_max: "{{ jumphost_user.maxdays | default(omit) }}"
    sp_expire: "{{ jumphost_user.expiredate | default(omit) }}"
  become: yes
  when: (jumphost_user.maxdays is defined) or
        (jumphost_user.expires is defined)
  ignore_errors: True
  register: jumphost_user_expiry

- name: Configure sudo access
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ jumphost_user.name }}"
    line: "{{ jumphost_user.name }}\t{{ jumphost_user.sudoer_entry }}"
    backup: yes
  when: jumphost_user.sudoer_entry is defined
  become: yes
  ignore_errors: True
  register: jumphost_user_sudo

- name: install packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  become: yes
  with_items: "{{ jumphost_packages }}"

- name: copy certs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    #owner: root
    #group: root
    #mode: 0600
  with_items: "{{ jumphost_certs }}"
  when: 
    - jumphost_copy_certs is defined
    - jumphost_copy_certs
  become: yes

- name: install shellinabox
  include_role: 
    name: ansible-role-shellinabox
  become: yes

- name: restart apache
  service:
    name: httpd
    state: restarted
  become: yes

- name: Configure sshd access
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication yes"
    backup: yes
  become: yes
  ignore_errors: True
  register: jumphost_sshd

- name: restart sshd
  service:
    name: sshd
    state: restarted
  when: jumphost_sshd | changed
  become: yes
  
