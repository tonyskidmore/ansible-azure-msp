---
- name: Deploy azure resource manager group
  hosts: localhost
  connection: local
  tags:
    - azure

  roles:

  - name: azure VM provisioning
    role: azure_rm_group
    tags:
      - azure
      - deploy

  post_tasks:

  - name: deployment variable
    debug:
      var: azure_deployment
      verbosity: "{{ verbosity_level }}"

  - name: refresh the inventory
    meta: refresh_inventory
    tags:
      - azure
      - inventory

  - name: display groups
    debug:
      var: groups
      verbosity: "{{ verbosity_level }}"

- name:  Deploy server roles
  hosts: role_ansible:role_jumphost:role_docker
  strategy: free
  tags:
    - azure
    - awx
    - docker

  pre_tasks:

  - name: wait for VMs
    wait_for_connection:
      timeout: 300

  tasks:

  - import_tasks: ansible-awx.yml
    when: "'role_ansible' in group_names"
    tags:
      - awx-config

  - import_tasks: docker.yml
    when: "'role_docker' in group_names"
    tags:
      - docker-config

  - import_tasks: jumphost.yml
    when: "'role_jumphost' in group_names"
    tags:
      - jumphost-config

  post_tasks:
  - name: set DNS fact
    set_fact:
      demorest_dns_txt_value: "{{ hostvars[groups['role_ansible'][0]]['awx_base64_user_credential'] }}"
    ignore_errors: yes
    when: awx_base64_user_credential is defined
    delegate_to: localhost

  - name: debug DNS value
    debug:
      var: demorest_dns_txt_value
    delegate_to: localhost

- name: Update Azure DNS
  hosts: localhost
  gather_facts: false
  connection: local

  tasks:

  - name: set DNS TXT record
    azure_rm_dnsrecordset:
      resource_group: "{{ az_dns_resource_group }}"
      zone_name: "{{ az_dnsrecordset_zone_name }}"
      state: present
      relative_name: "{{ az_dnsrecordset_relative_name }}"
      record_type: "{{ az_dnsrecordset_record_type }}"
      records:
        - entry: "{{ demorest_dns_txt_value }}"
    register: azure_dnsrecordset

  - name: debug azure_dnsrecordset
    debug:
      var: azure_dnsrecordset

